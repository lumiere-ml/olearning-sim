# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import resourceService_pb2 as resourceService__pb2


class ResourceMgrStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getClusterAvailableResource = channel.unary_unary(
                '/ResourceMgr/getClusterAvailableResource',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=resourceService__pb2.ServerClusterResource.FromString,
                )
        self.getClusterResourceDetail = channel.unary_unary(
                '/ResourceMgr/getClusterResourceDetail',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=resourceService__pb2.ServerClusterDetail.FromString,
                )
        self.requestClusterResource = channel.unary_unary(
                '/ResourceMgr/requestClusterResource',
                request_serializer=resourceService__pb2.ServerClusterReq.SerializeToString,
                response_deserializer=resourceService__pb2.ServerClusterStatus.FromString,
                )
        self.releaseClusterResource = channel.unary_unary(
                '/ResourceMgr/releaseClusterResource',
                request_serializer=resourceService__pb2.ServerClusterReq.SerializeToString,
                response_deserializer=resourceService__pb2.ServerClusterStatus.FromString,
                )
        self.getClusterTotalResource = channel.unary_unary(
                '/ResourceMgr/getClusterTotalResource',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=resourceService__pb2.ServerClusterResource.FromString,
                )
        self.getVMResource = channel.unary_unary(
                '/ResourceMgr/getVMResource',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=resourceService__pb2.VMClusterResource.FromString,
                )
        self.getPhoneResource = channel.unary_unary(
                '/ResourceMgr/getPhoneResource',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=resourceService__pb2.PhoneClusterResource.FromString,
                )
        self.getTotalResource = channel.unary_unary(
                '/ResourceMgr/getTotalResource',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=resourceService__pb2.ResourceMessage.FromString,
                )
        self.getResource = channel.unary_unary(
                '/ResourceMgr/getResource',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=resourceService__pb2.Resource.FromString,
                )
        self.requestResource = channel.unary_unary(
                '/ResourceMgr/requestResource',
                request_serializer=resourceService__pb2.ResReq.SerializeToString,
                response_deserializer=resourceService__pb2.RequestStatus.FromString,
                )
        self.releaseResource = channel.unary_unary(
                '/ResourceMgr/releaseResource',
                request_serializer=resourceService__pb2.ResRelease.SerializeToString,
                response_deserializer=resourceService__pb2.ReleaseStatus.FromString,
                )


class ResourceMgrServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getClusterAvailableResource(self, request, context):
        """1.1 服务器资源查询
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getClusterResourceDetail(self, request, context):
        """1.2 服务器资源明细查询 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def requestClusterResource(self, request, context):
        """1.3 服务器资源申请
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def releaseClusterResource(self, request, context):
        """1.4 服务器资源释放
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getClusterTotalResource(self, request, context):
        """1.5 服务器总资源查询
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getVMResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPhoneResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getTotalResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getResource(self, request, context):
        """资源查询
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def requestResource(self, request, context):
        """资源申请
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def releaseResource(self, request, context):
        """资源释放
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResourceMgrServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getClusterAvailableResource': grpc.unary_unary_rpc_method_handler(
                    servicer.getClusterAvailableResource,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=resourceService__pb2.ServerClusterResource.SerializeToString,
            ),
            'getClusterResourceDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.getClusterResourceDetail,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=resourceService__pb2.ServerClusterDetail.SerializeToString,
            ),
            'requestClusterResource': grpc.unary_unary_rpc_method_handler(
                    servicer.requestClusterResource,
                    request_deserializer=resourceService__pb2.ServerClusterReq.FromString,
                    response_serializer=resourceService__pb2.ServerClusterStatus.SerializeToString,
            ),
            'releaseClusterResource': grpc.unary_unary_rpc_method_handler(
                    servicer.releaseClusterResource,
                    request_deserializer=resourceService__pb2.ServerClusterReq.FromString,
                    response_serializer=resourceService__pb2.ServerClusterStatus.SerializeToString,
            ),
            'getClusterTotalResource': grpc.unary_unary_rpc_method_handler(
                    servicer.getClusterTotalResource,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=resourceService__pb2.ServerClusterResource.SerializeToString,
            ),
            'getVMResource': grpc.unary_unary_rpc_method_handler(
                    servicer.getVMResource,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=resourceService__pb2.VMClusterResource.SerializeToString,
            ),
            'getPhoneResource': grpc.unary_unary_rpc_method_handler(
                    servicer.getPhoneResource,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=resourceService__pb2.PhoneClusterResource.SerializeToString,
            ),
            'getTotalResource': grpc.unary_unary_rpc_method_handler(
                    servicer.getTotalResource,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=resourceService__pb2.ResourceMessage.SerializeToString,
            ),
            'getResource': grpc.unary_unary_rpc_method_handler(
                    servicer.getResource,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=resourceService__pb2.Resource.SerializeToString,
            ),
            'requestResource': grpc.unary_unary_rpc_method_handler(
                    servicer.requestResource,
                    request_deserializer=resourceService__pb2.ResReq.FromString,
                    response_serializer=resourceService__pb2.RequestStatus.SerializeToString,
            ),
            'releaseResource': grpc.unary_unary_rpc_method_handler(
                    servicer.releaseResource,
                    request_deserializer=resourceService__pb2.ResRelease.FromString,
                    response_serializer=resourceService__pb2.ReleaseStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ResourceMgr', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ResourceMgr(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getClusterAvailableResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/getClusterAvailableResource',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            resourceService__pb2.ServerClusterResource.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getClusterResourceDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/getClusterResourceDetail',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            resourceService__pb2.ServerClusterDetail.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def requestClusterResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/requestClusterResource',
            resourceService__pb2.ServerClusterReq.SerializeToString,
            resourceService__pb2.ServerClusterStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def releaseClusterResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/releaseClusterResource',
            resourceService__pb2.ServerClusterReq.SerializeToString,
            resourceService__pb2.ServerClusterStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getClusterTotalResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/getClusterTotalResource',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            resourceService__pb2.ServerClusterResource.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getVMResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/getVMResource',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            resourceService__pb2.VMClusterResource.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPhoneResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/getPhoneResource',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            resourceService__pb2.PhoneClusterResource.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getTotalResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/getTotalResource',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            resourceService__pb2.ResourceMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/getResource',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            resourceService__pb2.Resource.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def requestResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/requestResource',
            resourceService__pb2.ResReq.SerializeToString,
            resourceService__pb2.RequestStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def releaseResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceMgr/releaseResource',
            resourceService__pb2.ResRelease.SerializeToString,
            resourceService__pb2.ReleaseStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
